#ifndef PIPELINESTAGE_H#define PIPELINESTAGE_H#include "Context.h"/*    These flags are used to indicate a pipeline stage's   general operation. They are used to help the pipeline   job scheduler determine how it should divide a job's    workload amongst the individual threads to which it is   assigned. */#define STAGE_ATTRIB_READ_TRIANGLE_LIST     0x1#define STAGE_ATTRIB_READ_FRAGMENT_LIST     0x2#define STAGE_ATTRIB_READ_VERTEX_POSITION   0x4#define STAGE_ATTRIB_READ_VERTEX_COLOR      0x8#define STAGE_ATTRIB_WRITE_TRIANGLE_LIST    0x10#define STAGE_ATTRIB_WRITE_FRAGMENT_LIST    0x20#define STAGE_ATTRIB_WRITE_VERTEX_POSITION  0x40#define STAGE_ATTRIB_WRITE_VERTEX_COLOR     0x80#define STAGE_ATTRIB_TRIANGLE_LIST    0x11#define STAGE_ATTRIB_FRAGMENT_LIST    0x22#define STAGE_ATTRIB_VERTEX_POSITION  0x44#define STAGE_ATTRIB_VERTEX_COLOR     0x88#define STAGE_ATTRIB_READ  0xF#define STAGE_ATTRIB_WRITE 0xF0#define STAGE_ATTRIB_RW    0xFF#define STAGE_ATTRIB_SERIAL 0x100#define STAGE_ATTRIB_FIRST  0x1000class PipelineStage{  protected:  int attributes;    public:  PipelineStage();  virtual void processTriangles(Context *context) {};  int getAttributes();};#endif